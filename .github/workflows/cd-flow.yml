name:  Continuous Deployment

on:
  push:
    branches:
      - 'release/**'    
    # paths:
    #   - 'src/*'
    #   - 'test/*'
    #   - '.github/*'

jobs:

  build:
    runs-on: windows-latest
    env:
      PackageOutputPath: '${{ github.workspace }}\package'
      containerProject:  '${{ github.workspace }}\Container\src\Unity.Container.csproj'
      testProject:       '${{ github.workspace }}\Container\tests\Unity.Container.Tests.csproj'

    steps:

    - name: Checkout Container
      uses: actions/checkout@v2
      with:
        path: Container
        fetch-depth: 0

    - name: Label Fixed Issues
      uses: gh-bot/fix-labeler@master        
      with:
        path: Container

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'

    - name: Setup local NuGet source
      run: dotnet nuget add source "https://nuget.pkg.github.com/unitycontainer/index.json" -n github -u unitycontainer -p ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text

    - name: Add GitVersion, SourceLink, and Abstractions packages
      run: | 
        dotnet remove ${{ env.containerProject }} reference "..\..\Abstractions\src\Unity.Abstractions.csproj"
        dotnet add ${{ env.containerProject }} package GitVersionTask --no-restore
        dotnet add ${{ env.containerProject }} package Microsoft.SourceLink.GitHub

    - name: Build
      run: | 
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ env.containerProject }}
        dotnet msbuild -property:Configuration=Release -verbosity:m -restore:True ${{ env.testProject }}

    # - name: Test
    #   run: | 
    #     dotnet test ${{ env.testProject }}

    - name: Publish Local Package
      run: |
        dotnet nuget push '${{ env.PackageOutputPath }}\*' --skip-duplicate --source github
